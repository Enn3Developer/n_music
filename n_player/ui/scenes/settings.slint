import { Button, ScrollView, ComboBox, CheckBox, Switch, LineEdit } from "std-widgets.slint";
import { Separator } from "../components/separator.slint";
import { Setting } from "../components/setting.slint";
import { Localization } from "../globals/localization.slint";

export component Settings {
    in property <string> theme;
    in property <bool> window-size;
    in property <string> current-parth;
    callback exit();
    callback change_theme(string);
    callback toggle_save_window_size();
    callback path();
    callback set_path(string);
    settings := VerticalLayout {
        HorizontalLayout {
            spacing: 10px;
            padding: 10px;
            max-height: settings.height * 10%;
            Text {
                horizontal-alignment: left;
                vertical-alignment: center;
                text: Localization.settings;
                font-size: 24px;
            }

            HorizontalLayout {
                alignment: end;
                Button {
                    icon: @image-url("../../assets/icons/back.svg");
                    colorize-icon: true;
                    clicked => {
                        exit()
                    }
                }
            }
        }

        Separator { }

        ScrollView {
            VerticalLayout {
                spacing: 10px;
                padding: 10px;
                Setting {
                    text: Localization.theme;
                    ComboBox {
                        model: ["System", "Light", "Dark"];
                        current-value: theme;
                        selected(value) => {
                            change_theme(value)
                        }
                    }
                }

                Setting {
                    text: Localization.window_size;
                    Switch {
                        checked: window-size;
                        toggled => {
                            toggle_save_window_size()
                        }
                    }
                }

                Setting {
                    text: Localization.music_path;
                    LineEdit {
                        text: current-parth;
                        accepted(value) => {
                            set_path(value)
                        }
                    }

                    Button {
                        icon: @image-url("../../assets/icons/folder.svg");
                        colorize-icon: true;
                        clicked => {
                            path()
                        }
                    }
                }

                VerticalLayout { }
            }
        }
    }
}

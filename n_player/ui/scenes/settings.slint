import { Button, ScrollView, ComboBox, CheckBox, Switch, LineEdit, Palette } from "std-widgets.slint";
import { Separator } from "../components/separator.slint";
import { Setting } from "../components/setting.slint";
import { Localization } from "../globals/localization.slint";
import { SettingsData } from "../globals/settings_data.slint";
import { AppData } from "../globals/app_data.slint";

export component Settings {
    callback exit();
    settings := VerticalLayout {
        HorizontalLayout {
            spacing: 10px;
            padding: 10px;
            max-height: settings.height * 10%;
            Text {
                horizontal-alignment: left;
                vertical-alignment: center;
                text: Localization.settings;
                font-size: 24px;
            }

            HorizontalLayout {
                alignment: end;
                Button {
                    icon: @image-url("../../assets/icons/back.svg");
                    colorize-icon: true;
                    clicked => {
                        exit()
                    }
                }
            }
        }

        Separator { }

        ScrollView {
            VerticalLayout {
                spacing: 10px;
                padding: 10px;
                Setting {
                    text: Localization.theme;
                    ComboBox {
                        model: ["System", "Light", "Dark"];
                        current-value: SettingsData.theme;
                        selected(value) => {
                            SettingsData.change_theme(value);
                            SettingsData.theme = value;
                        }
                    }
                }

                Setting {
                    text: Localization.window_size;
                    Switch {
                        checked: SettingsData.save_window_size;
                        toggled => {
                            SettingsData.save_window_size = !SettingsData.save_window_size;
                            SettingsData.toggle_save_window_size(SettingsData.save_window_size);
                        }
                    }
                }

                Setting {
                    text: Localization.music_path;
                    LineEdit {
                        text: SettingsData.current_path;
                        accepted(value) => {
                            SettingsData.set_path(value)
                        }
                    }

                    Button {
                        icon: @image-url("../../assets/icons/folder.svg");
                        colorize-icon: true;
                        clicked => {
                            SettingsData.path()
                        }
                    }
                }

                Setting {
                    text: Localization.language;
                    ComboBox {
                        model: Localization.localizations;
                        current-value: Localization.current_locale;
                        selected(value) => {
                            Localization.set_locale(value)
                        }
                    }
                }

                VerticalLayout {
                    Text {
                        text: "N Music v" + AppData.version;
                        font-size: 12px;
                        color: Palette.accent-foreground;
                    }
                }
            }
        }
    }
}
